@model IEnumerable<FinanceWebScraperUsingAsp.NetAndSQL.Models.Stock>

@{
    ViewBag.Title = "Stock";
}

<h2>Stock</h2>

<p>
    @*Html.ActionLink("Create New", "Create")*@
    @Html.ActionLink("Scrape New Stock Data", "ScrapeYahoo", "Stocks")
    
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.SnapShotTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Symbol)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Change)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PercentChange)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Currency)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AverageVolume)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MarketCap)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>

        <th></th>
    </tr>

    @{ FinanceWebScraperUsingAsp.NetAndSQL.Models.Stock prevStock = new FinanceWebScraperUsingAsp.NetAndSQL.Models.Stock(); }
    
    @foreach (var stock in Model)
    {
        <tr>
            <td>
                @{ if (stock.SnapShotTime != prevStock.SnapShotTime)
                    {
                        @Html.DisplayFor(modelItem => stock.SnapShotTime)
                        <br />
                        @*@Html.DisplayFor(modelItem => prevStock.SnapShotTime)*@
                        @*@Html.ActionLink("Delete", "Delete", new { id = stock.SnapShotTime })*@
                        @Html.ActionLink("Delete", "Delete", new { SnapShotTime  = stock.SnapShotTime })
                    }
                }

<td>
                @Html.DisplayFor(modelItem => stock.Symbol)
            </td>
            <td>
                @Html.DisplayFor(modelItem => stock.Change)
            </td>
            <td>
                @Html.DisplayFor(modelItem => stock.PercentChange)
            </td>
            <td>
                @Html.DisplayFor(modelItem => stock.Currency)
            </td>
            <td>
                @Html.DisplayFor(modelItem => stock.AverageVolume)
            </td>
            <td>
                @Html.DisplayFor(modelItem => stock.MarketCap)
            </td>
            <td>
                @Html.DisplayFor(modelItem => stock.Price)
            </td>
            <td>
                @*@@Html.ActionLink("Details", "Details", new { id = stock.Id }) |*@
                
            </td>
        </tr>
        prevStock = stock;
     }

</table>
